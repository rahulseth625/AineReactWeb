{"version":3,"sources":["logo.svg","Components/ComB.js","Components/ComA.js","Components/UseMemo.js","Components/UseRef.js","Components/UseReducer.js","Components/PureCmponent.js","Components/HigherOrderComponent.js","Components/ReduxDemo.js","Components/FetchReduxList.js","redux/cakes/CakeTypes.js","redux/cakes/CakeAction.js","redux/IceCream/IceCreamTypes.js","redux/IceCream/IceCreamActions.js","redux/User/UserTypes.js","redux/User/UserAction.js","Components/CakeContainer.js","Components/HooksCakeContainer.js","redux/cakes/cakeReducer.js","redux/IceCream/IceCreamReducer.js","redux/RootReducer.js","redux/cakes/store.js","Components/IceCreamContainer.js","Components/NewCakeContainer.js","Components/ItemContainer.js","Components/UserContainer.js","App.js","reportWebVitals.js","index.js"],"names":["ComB","fname","useContext","FirstName","lname","LastName","ComA","UseMemo","useState","counter","setCounter","items","setItems","multiCountMemo","useMemo","console","warn","onClick","UseRef","inputRef","useRef","type","ref","current","focus","style","color","value","reducer","state","action","log","UseReducer","useReducer","dispatch","PureCmponent","data","this","setState","PureComponent","HOCPink","props","backgroundColor","width","cmp","HOCGreen","HOCYellow","Counter","count","setCount","HigherOrderComponent","redux","require","logger","createLogger","ReduxDemo","applyMiddleware","combineReducers","BUY_CAKE","BUY_ICECREAM","buyCake","info","buyIceCream","initialCakeState","numOfCakes","initialIceCreamState","rootReducer","cake","iceCream","numOfIceCream","store","createStore","getStore","unsubscribe","subscribe","FetchReduxList","initialState","loading","users","error","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","payload","thunk","axios","get","then","response","map","user","id","fetchUsersSuccess","catch","fetchUsersFailure","message","number","fetchUsers","errorMsg","connect","HooksCakeContainer","useSelector","useDispatch","cakeReducer","iceCreamReducer","RootReducer","IceCreamReducer","composeWithDevTools","setNumber","onChange","e","target","ownProps","item","buyItem","userData","useEffect","createContext","App","Provider","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9dbb07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React , { useContext } from 'react';\r\nimport ComC from './ComC';\r\nimport { FirstName, LastName } from '../App';\r\n\r\nconst ComB = () => {\r\n\r\n    const fname = useContext(FirstName);\r\n    const lname = useContext(LastName);\r\n\r\n    return (\r\n        <h1> My name is {fname} {lname}</h1>\r\n    )\r\n\r\n    // return <ComC />\r\n}\r\n\r\nexport default ComB","import React, { useContext, useState, useMemo } from 'react';\r\nimport ComB from './ComB';\r\n\r\nconst ComA = () => {\r\n    return(\r\n        <ComB />\r\n    )\r\n    \r\n}\r\n\r\nexport default ComA","import React, { useContext, useState, useMemo } from 'react';\r\n\r\nconst UseMemo = () => {\r\n\r\n    const[counter, setCounter] = useState(0);\r\n    const[items, setItems] = useState(10);\r\n\r\n    const multiCountMemo = useMemo(function multiCount() {\r\n        console.warn(\"multicount\");\r\n        return counter*5;\r\n    },[counter])\r\n\r\n    return <>\r\n\r\n        <h2>{multiCountMemo}</h2>\r\n        <button onClick = {() => setCounter(counter+1)}>  \r\n            <h2>Count : {counter}</h2>\r\n        </button>\r\n        <button onClick = {() => setItems(items*10)}>\r\n            <h2>Items : {items}</h2>\r\n        </button>\r\n    </>\r\n    \r\n}\r\n\r\nexport default UseMemo","import React, { useRef } from 'react';\r\n\r\nconst UseRef = () => {\r\n\r\n    let inputRef = useRef(null);\r\n\r\n    const handleInputRef = () => {\r\n        inputRef.current.focus();\r\n        // inputRef.current.style.display = 'none';\r\n        inputRef.current.style.color = \"yellow\";\r\n        return inputRef.current.value = 100;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input type='text' ref={inputRef} />\r\n            <button onClick={handleInputRef}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseRef;","import React, { useReducer } from 'react';\r\n\r\nconst initialState = 0;\r\nconst reducer = (state, action) => {\r\n    console.log(state, action);\r\n    if(action.type === 'increment'){\r\n        return state + 1;\r\n    }\r\n    if(action.type === 'decrement'){\r\n        return state - 1;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst UseReducer = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <div>\r\n            <p>{state}</p>\r\n            <button onClick={() => dispatch({ type: 'increment' })}> Increment</button>\r\n            <button onClick={() => dispatch({ type: 'decrement' })}> Decrement</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseReducer;","import React, { Component, PureComponent } from 'react';\r\n\r\nclass PureCmponent extends PureComponent{\r\n    constructor(){\r\n        super();\r\n        this.state =  {\r\n            data : 10\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.warn(this.state.data);\r\n        return(\r\n            <div>\r\n                <br></br>\r\n                Pure Component : {this.state.data}\r\n                <button onClick= {() => this.setState({data: 10})}>Update</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PureCmponent;","import React, { useState } from 'react';\r\n\r\nconst HigherOrderComponent = () => {\r\n\r\n    return (\r\n        <div>\r\n            <HOCPink cmp={Counter} />\r\n            <HOCGreen cmp={Counter} />\r\n            <HOCYellow cmp={Counter} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HOCPink = (props) => {\r\n    return <div>\r\n        <h2 style={{ backgroundColor: 'pink', width: 100 }}>\r\n        <props.cmp /> </h2>\r\n    </div>\r\n\r\n}\r\n\r\nconst HOCGreen = (props) => {\r\n    return <div>\r\n        <h2 style={{ backgroundColor: 'green', width: 100 }}>\r\n            <props.cmp /> </h2>\r\n    </div>\r\n}\r\n\r\nconst HOCYellow = (props) => {\r\n    return <div>\r\n        <h2 style={{ backgroundColor: 'yellow', width: 100 }}>\r\n        <props.cmp /> </h2>\r\n    </div>\r\n}\r\n\r\nconst Counter = () => {\r\n    const [count, setCount] = useState(0);\r\n    return (\r\n        <div>\r\n            <button onClick={() => setCount(count + 1)}>Higher Order component Update</button>\r\n                count : {count}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HigherOrderComponent;","import { createStore } from 'redux';\r\n\r\nconst redux = require('redux')\r\nconst reduxLogger = require('redux-logger')\r\nconst logger = reduxLogger.createLogger()\r\n\r\n\r\nconst ReduxDemo = () => {\r\n\r\n    const applyMiddleware = redux.applyMiddleware\r\n    const combineReducers = redux.combineReducers\r\n\r\n    const BUY_CAKE = 'BUY_CAKE';\r\n    const BUY_ICECREAM = 'BUY_ICECREAM';\r\n\r\n\r\n    function buyCake() {\r\n        return {\r\n            type: BUY_CAKE,\r\n            info: 'First Redux Action'\r\n        }\r\n    }\r\n\r\n    function buyIceCream() {\r\n        return {\r\n            type: BUY_ICECREAM,\r\n        }\r\n    }\r\n\r\n    const initialCakeState = {\r\n        numOfCakes: 10,\r\n    }\r\n\r\n    const initialIceCreamState = {\r\n        numOfCakes: 10,\r\n    }\r\n\r\n    const cakeReducer = (state = initialCakeState, action) => {\r\n        switch (action.type) {\r\n            case BUY_CAKE: return {\r\n                ...state,\r\n                numOfCakes: state.numOfCakes - 1\r\n            }\r\n            default: return state\r\n        }\r\n    }\r\n\r\n    const iceCreamReducer = (state = initialIceCreamState, action) => {\r\n        switch (action.type) {\r\n            case BUY_ICECREAM: return {\r\n                ...state,\r\n                numOfIceCream: state.numOfCakes - 1\r\n            }\r\n            default: return state\r\n        }\r\n    }\r\n\r\n    const rootReducer = combineReducers({\r\n        cake: cakeReducer,\r\n        iceCream: iceCreamReducer\r\n    })\r\n\r\n    const store = createStore(rootReducer, applyMiddleware(logger))\r\n    console.log('Initial State', store.getStore)\r\n    const unsubscribe = store.subscribe(() => { })\r\n    store.dispatch(buyCake())\r\n    store.dispatch(buyCake())\r\n    store.dispatch(buyCake())\r\n    store.dispatch(buyIceCream())\r\n    store.dispatch(buyIceCream())\r\n    unsubscribe()\r\n\r\n    return (\r\n        <>\r\n            {console.log('Initial State', store.getStore)}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ReduxDemo\r\n\r\n","import react from 'react';\r\n//import redux from 'redux';\r\n//import thunkMiddleware from 'redux-thunk';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport axios from 'axios';\r\n\r\n//const redux = require('redux')\r\n//const thunkMiddleware = require('redux-thunk').default\r\n\r\n// const createStore = createStore\r\n// const applyMiddleware = applyMiddleware\r\n\r\n\r\nconst FetchReduxList = () => {\r\n\r\n    // const createStore = redux.createStore\r\n    // const applyMiddleware = redux.applyMiddleware\r\n    \r\n\r\n    const initialState = {\r\n        loading : false,\r\n        users : [],\r\n        error : ''\r\n    }\r\n\r\n    const FETCH_USERS_REQUEST  = 'FETCH_USERS_REQUEST'\r\n    const FETCH_USERS_SUCCESS  = 'FETCH_USERS_SUCCESS'\r\n    const FETCH_USERS_FAILURE  = 'FETCH_USERS_FAILURE'\r\n\r\n    const fetchUserRequest = () => {\r\n        return {\r\n            type : FETCH_USERS_REQUEST\r\n        }\r\n    }\r\n\r\n    const fetchUsersSuccess = (users) => {\r\n        return {\r\n            type : FETCH_USERS_SUCCESS,\r\n            payload : users\r\n        }\r\n    }\r\n\r\n    const fetchUsersFailure = (error) => {\r\n        return {\r\n            type: FETCH_USERS_FAILURE,\r\n            payload : error\r\n        }\r\n    }\r\n\r\n    const reducer = (state = initialState, action) => {\r\n        switch(action.type){\r\n            case FETCH_USERS_REQUEST :\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n            case FETCH_USERS_SUCCESS :\r\n            return {\r\n                loading : false,\r\n                users : action.payload,\r\n                error : ''\r\n            }\r\n            case FETCH_USERS_FAILURE :\r\n            return {\r\n                loading : false,\r\n                users : [],\r\n                error : action.payload\r\n            }\r\n        }\r\n    }\r\n\r\n    // action creator\r\n    const fetchUsers = () => {\r\n        return function(dispatch){\r\n            dispatch(fetchUserRequest())\r\n            axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {\r\n                // response.data is the array of users\r\n                const users = response.data.map( user => user.id)\r\n                dispatch(fetchUsersSuccess(users))\r\n            })\r\n            .catch(error => {\r\n                // error.message is the error description\r\n                dispatch(fetchUsersFailure(error.message))\r\n            })\r\n        }\r\n    }\r\n\r\n    const store = createStore(reducer, applyMiddleware(thunk))\r\n    store.subscribe(() => console.log(store.getStore))\r\n    store.dispatch(fetchUsers())\r\n\r\n    return(\r\n    <>\r\n        <h1></h1>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default FetchReduxList","export const BUY_CAKE = 'BUY_CAKE'","import { BUY_CAKE } from './CakeTypes';\r\n\r\nexport const buyCake = (number = 1) => {\r\n    return {\r\n        type: BUY_CAKE,\r\n        payload: number\r\n    }\r\n}","export const BUY_ICECREAM = 'BUY_ICECREAM';","import { BUY_ICECREAM } from './IceCreamTypes';\r\n\r\nexport const buyIceCream = () => {\r\n    return {\r\n        type : BUY_ICECREAM\r\n    }\r\n}","export const FETCH_USERS_REQUEST  = 'FETCH_USERS_REQUEST'\r\nexport const FETCH_USERS_SUCCESS  = 'FETCH_USERS_SUCCESS'\r\nexport const FETCH_USERS_FAILURE  = 'FETCH_USERS_FAILURE'","import {\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS,\r\n    FETCH_USERS_FAILURE\r\n} from './UserTypes';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const fetchUsersRequest = () => {\r\n    return {\r\n        type : FETCH_USERS_REQUEST\r\n    }\r\n}\r\n\r\nconst fetchUsersSuccess = (users) => {\r\n    return {\r\n        type : FETCH_USERS_SUCCESS,\r\n        payload : users\r\n    }\r\n}\r\n\r\nconst fetchUsersFailure = (error) => {\r\n    return {\r\n        type: FETCH_USERS_FAILURE,\r\n        payload : error\r\n    }\r\n}\r\n\r\n // action creator\r\n export const fetchUsers = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchUsersRequest())\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => {\r\n            // response.data is the array of users\r\n            const users = response.data\r\n            dispatch(fetchUsersSuccess(users))\r\n        })\r\n        .catch(error => {\r\n            // error.message is the error description\r\n            const errorMsg = error.message\r\n            dispatch(fetchUsersFailure(errorMsg))\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport '../App.css'\r\n//import { buyCake } from '../redux/cakes/CakeAction';\r\nimport { buyCake } from '../redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CakeContainer = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Number of cake - {props.numOfCakes}</h2>\r\n            <button onClick={props.buyCake}>Buy cake</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        numOfCakes : state.cake.numOfCakes \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        buyCake : () => dispatch(buyCake())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CakeContainer)","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { buyCake } from '../redux';\r\n\r\nconst HooksCakeContainer = () => {\r\n    const numOfCakes = useSelector(state => state.cake.numOfCakes)\r\n    const dispatch = useDispatch()\r\n        return (\r\n            <div>\r\n                <h2>Num Of Cake - {numOfCakes}</h2>\r\n                <button onClick={() => dispatch(buyCake())}>Buy Cake</button>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default HooksCakeContainer;","import { BUY_CAKE } from './CakeTypes';\r\n\r\nconst initialState = {\r\n    numOfCakes : 10\r\n}\r\n\r\nconst cakeReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case BUY_CAKE : return {\r\n            ...state,\r\n            numOfCakes : state.numOfCakes - action.payload \r\n        }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default cakeReducer","import { BUY_ICECREAM } from  './IceCreamTypes';\r\n\r\nconst initialState = {\r\n    numOfIceCream : 20\r\n}\r\n\r\nconst iceCreamReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case BUY_ICECREAM : return {\r\n            ...state,\r\n            numOfIceCream : state.numOfIceCream - 1 \r\n        }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default iceCreamReducer","import { combineReducers } from 'redux';\r\nimport cakeReducer from './cakes/cakeReducer';\r\nimport IceCreamReducer from './IceCream/IceCreamReducer';\r\nimport UserReducer from './User/UserReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n    cake: cakeReducer,\r\n    iceCream: IceCreamReducer,\r\n    //user: UserReducer\r\n})\r\n\r\nexport default RootReducer\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport RootReducer from '../RootReducer';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(RootReducer, composeWithDevTools(applyMiddleware(logger, thunk)))\r\n\r\nexport default store","import React from 'react'\r\nimport '../App.css'\r\n//import { buyCake } from '../redux/cakes/CakeAction';\r\nimport { buyIceCream } from '../redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst IceCreamContainer = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Number of IceCream - {props.numOfIceCream}</h2>\r\n            <button onClick={props.buyIceCream}>Buy IceCream</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        numOfIceCream : state.iceCream.numOfIceCream \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        buyIceCream : () => dispatch(buyIceCream())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IceCreamContainer)","import React, { useState } from 'react'\r\nimport '../App.css'\r\n//import { buyCake } from '../redux/cakes/CakeAction';\r\nimport { buyCake } from '../redux';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NewCakeContainer = (props) => {\r\n    const [number, setNumber] = useState(1);\r\n    return (\r\n        <div>\r\n            <h2>Number of cake - {props.numOfCakes}</h2>\r\n            <input type = 'text' value={number} onChange={e => setNumber(e.target.value)} />\r\n            <button onClick={() => props.buyCake(number)}>Buy {number} cake</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        numOfCakes : state.cake.numOfCakes \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        buyCake : (number) => dispatch(buyCake(number))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NewCakeContainer)","import React, { Component } from 'react';\r\nimport { connect }from 'react-redux';\r\nimport { buyCake, buyIceCream } from '../redux';\r\n\r\nconst ItemContainer = (props) => {\r\n    \r\n\r\n        return (\r\n            <div>\r\n                <h2>Item - {props.item}</h2>\r\n                <button onClick={props.buyItem}>Buy Items</button>\r\n            </div>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const itemState = ownProps.cake\r\n    ? state.cake.numOfCakes\r\n    : state.iceCream.numOfIceCream\r\n    return {\r\n        item : itemState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const dispatchFunction = ownProps.cake\r\n    ? () => dispatch(buyCake())\r\n    : () => dispatch(buyIceCream())\r\n    return {\r\n        buyItem : dispatchFunction\r\n    }\r\n}\r\n\r\nexport default connect(\r\nmapStateToProps, \r\nmapDispatchToProps\r\n)(ItemContainer);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUsers } from '../redux';\r\n\r\nconst UserContainer = ({ userData, fetchUsers }) => {\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, [])\r\n        // return userData.loading ? ( \r\n        //     <h2> Loading </h2>\r\n        // ) : userData.error ? (\r\n        //     <h2> {userData.error} </h2>\r\n        // ) : (\r\n        //     <div>\r\n        //         <h2> UserList </h2>\r\n        //         <div>\r\n        //             {\r\n        //                 userData && \r\n        //                 userData.users && \r\n        //                 userData.users.map(user => <p>{user.name}</p>)\r\n        //             }\r\n        //         </div>\r\n        //     </div>\r\n        // )\r\n\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData : state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchUsers : () => dispatch(fetchUsers())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserContainer);","import logo from './logo.svg';\nimport './App.css';\nimport Grid from './Components/Grid';\nimport ComA from './Components/ComA';\nimport { createContext } from 'react';\nimport UseMemo from './Components/UseMemo';\nimport UseRef from './Components/UseRef';\nimport UseReducer from './Components/UseReducer';\nimport PureCmponent from './Components/PureCmponent';\nimport HigherOrderComponent from './Components/HigherOrderComponent';\n//import Redux from './Components/Redux';\nimport ReduxDemo from './Components/ReduxDemo';\nimport FetchReduxList from './Components/FetchReduxList';\nimport CakeContainer from './Components/CakeContainer';\nimport HooksCakeContainer from './Components/HooksCakeContainer';\nimport { Provider } from 'react-redux';\nimport store from './redux/cakes/store'\nimport IceCreamContainer from './Components/IceCreamContainer';\nimport NewCakeContainer from './Components/NewCakeContainer';\nimport ItemContainer from './Components/ItemContainer';\nimport UserContainer from './Components/UserContainer';\n\nconst FirstName = createContext();\nconst LastName = createContext();\n\nfunction App() {\n\n  return (\n    <div>\n      {/* context api concept */}\n      <FirstName.Provider value=\"rahul\">\n        <LastName.Provider value=\"seth\">\n          <ComA />\n        </LastName.Provider>\n      </FirstName.Provider>\n\n      {/* usememo concept */}\n      <UseMemo />\n      {/* useRef concept */}\n      <UseRef />\n      {/* useReducer concept */}\n      <UseReducer />\n      {/* PureComponent concept */}\n      <PureCmponent />\n      <br></br>\n      {/* HigherOrderComponent concept */}\n      <HigherOrderComponent />\n\n      <br>\n      </br>\n      <br></br>\n      <ReduxDemo />\n      <FetchReduxList />\n      <Provider store={store}>\n        <div className=\"App\">\n          <HooksCakeContainer />\n          <CakeContainer />\n          <IceCreamContainer />\n          <NewCakeContainer />\n          <ItemContainer cake/>\n          <ItemContainer />\n          <UserContainer />\n        </div>\n      </Provider>\n      {/* UI part */}\n      {/* <Grid /> */}\n    </div>\n  );\n}\n\nexport default App;\nexport { FirstName, LastName };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}